#include "stub.h" 
 #include <cosmo.h>
#include "libusb.h"

void initialize_libusb(void);
void close_libusb(void);

int (libusb_init)(libusb_context * * ctx);
void (libusb_exit)(libusb_context * ctx);
void (libusb_set_debug)(libusb_context * ctx, int level);
void (libusb_set_log_cb)(libusb_context * ctx, libusb_log_cb cb, int mode);
const struct libusb_version * (libusb_get_version)(void);
int (libusb_has_capability)(uint32_t capability);
const char * (libusb_error_name)(int errcode);
int (libusb_setlocale)(const char * locale);
const char * (libusb_strerror)(int errcode);
ssize_t (libusb_get_device_list)(libusb_context * ctx, libusb_device * * * list);
void (libusb_free_device_list)(libusb_device * * list, int unref_devices);
libusb_device * (libusb_ref_device)(libusb_device * dev);
void (libusb_unref_device)(libusb_device * dev);
int (libusb_get_configuration)(libusb_device_handle * dev, int * config);
int (libusb_get_device_descriptor)(libusb_device * dev, struct libusb_device_descriptor * desc);
int (libusb_get_active_config_descriptor)(libusb_device * dev, struct libusb_config_descriptor * * config);
int (libusb_get_config_descriptor)(libusb_device * dev, uint8_t config_index, struct libusb_config_descriptor * * config);
int (libusb_get_config_descriptor_by_value)(libusb_device * dev, uint8_t bConfigurationValue, struct libusb_config_descriptor * * config);
void (libusb_free_config_descriptor)(struct libusb_config_descriptor * config);
int (libusb_get_ss_endpoint_companion_descriptor)(libusb_context * ctx, const struct libusb_endpoint_descriptor * endpoint, struct libusb_ss_endpoint_companion_descriptor * * ep_comp);
void (libusb_free_ss_endpoint_companion_descriptor)(struct libusb_ss_endpoint_companion_descriptor * ep_comp);
int (libusb_get_bos_descriptor)(libusb_device_handle * dev_handle, struct libusb_bos_descriptor * * bos);
void (libusb_free_bos_descriptor)(struct libusb_bos_descriptor * bos);
int (libusb_get_usb_2_0_extension_descriptor)(libusb_context * ctx, struct libusb_bos_dev_capability_descriptor * dev_cap, struct libusb_usb_2_0_extension_descriptor * * usb_2_0_extension);
void (libusb_free_usb_2_0_extension_descriptor)(struct libusb_usb_2_0_extension_descriptor * usb_2_0_extension);
int (libusb_get_ss_usb_device_capability_descriptor)(libusb_context * ctx, struct libusb_bos_dev_capability_descriptor * dev_cap, struct libusb_ss_usb_device_capability_descriptor * * ss_usb_device_cap);
void (libusb_free_ss_usb_device_capability_descriptor)(struct libusb_ss_usb_device_capability_descriptor * ss_usb_device_cap);
int (libusb_get_container_id_descriptor)(libusb_context * ctx, struct libusb_bos_dev_capability_descriptor * dev_cap, struct libusb_container_id_descriptor * * container_id);
void (libusb_free_container_id_descriptor)(struct libusb_container_id_descriptor * container_id);
uint8_t (libusb_get_bus_number)(libusb_device * dev);
uint8_t (libusb_get_port_number)(libusb_device * dev);
int (libusb_get_port_numbers)(libusb_device * dev, uint8_t * port_numbers, int port_numbers_len);
int (libusb_get_port_path)(libusb_context * ctx, libusb_device * dev, uint8_t * path, uint8_t path_length);
libusb_device * (libusb_get_parent)(libusb_device * dev);
uint8_t (libusb_get_device_address)(libusb_device * dev);
int (libusb_get_device_speed)(libusb_device * dev);
int (libusb_get_max_packet_size)(libusb_device * dev, unsigned char endpoint);
int (libusb_get_max_iso_packet_size)(libusb_device * dev, unsigned char endpoint);
int (libusb_wrap_sys_device)(libusb_context * ctx, intptr_t sys_dev, libusb_device_handle * * dev_handle);
int (libusb_open)(libusb_device * dev, libusb_device_handle * * dev_handle);
void (libusb_close)(libusb_device_handle * dev_handle);
libusb_device * (libusb_get_device)(libusb_device_handle * dev_handle);
int (libusb_set_configuration)(libusb_device_handle * dev_handle, int configuration);
int (libusb_claim_interface)(libusb_device_handle * dev_handle, int interface_number);
int (libusb_release_interface)(libusb_device_handle * dev_handle, int interface_number);
libusb_device_handle * (libusb_open_device_with_vid_pid)(libusb_context * ctx, uint16_t vendor_id, uint16_t product_id);
int (libusb_set_interface_alt_setting)(libusb_device_handle * dev_handle, int interface_number, int alternate_setting);
int (libusb_clear_halt)(libusb_device_handle * dev_handle, unsigned char endpoint);
int (libusb_reset_device)(libusb_device_handle * dev_handle);
int (libusb_alloc_streams)(libusb_device_handle * dev_handle, uint32_t num_streams, unsigned char * endpoints, int num_endpoints);
int (libusb_free_streams)(libusb_device_handle * dev_handle, unsigned char * endpoints, int num_endpoints);
unsigned char * (libusb_dev_mem_alloc)(libusb_device_handle * dev_handle, size_t length);
int (libusb_dev_mem_free)(libusb_device_handle * dev_handle, unsigned char * buffer, size_t length);
int (libusb_kernel_driver_active)(libusb_device_handle * dev_handle, int interface_number);
int (libusb_detach_kernel_driver)(libusb_device_handle * dev_handle, int interface_number);
int (libusb_attach_kernel_driver)(libusb_device_handle * dev_handle, int interface_number);
int (libusb_set_auto_detach_kernel_driver)(libusb_device_handle * dev_handle, int enable);
struct libusb_transfer * (libusb_alloc_transfer)(int iso_packets);
int (libusb_submit_transfer)(struct libusb_transfer * transfer);
int (libusb_cancel_transfer)(struct libusb_transfer * transfer);
void (libusb_free_transfer)(struct libusb_transfer * transfer);
void (libusb_transfer_set_stream_id)(struct libusb_transfer * transfer, uint32_t stream_id);
uint32_t (libusb_transfer_get_stream_id)(struct libusb_transfer * transfer);
int (libusb_control_transfer)(libusb_device_handle * dev_handle, uint8_t request_type, uint8_t bRequest, uint16_t wValue, uint16_t wIndex, unsigned char * data, uint16_t wLength, unsigned int timeout);
int (libusb_bulk_transfer)(libusb_device_handle * dev_handle, unsigned char endpoint, unsigned char * data, int length, int * actual_length, unsigned int timeout);
int (libusb_interrupt_transfer)(libusb_device_handle * dev_handle, unsigned char endpoint, unsigned char * data, int length, int * actual_length, unsigned int timeout);
int (libusb_get_string_descriptor_ascii)(libusb_device_handle * dev_handle, uint8_t desc_index, unsigned char * data, int length);
int (libusb_try_lock_events)(libusb_context * ctx);
void (libusb_lock_events)(libusb_context * ctx);
void (libusb_unlock_events)(libusb_context * ctx);
int (libusb_event_handling_ok)(libusb_context * ctx);
int (libusb_event_handler_active)(libusb_context * ctx);
void (libusb_interrupt_event_handler)(libusb_context * ctx);
void (libusb_lock_event_waiters)(libusb_context * ctx);
void (libusb_unlock_event_waiters)(libusb_context * ctx);
int (libusb_wait_for_event)(libusb_context * ctx, struct timeval * tv);
int (libusb_handle_events_timeout)(libusb_context * ctx, struct timeval * tv);
int (libusb_handle_events_timeout_completed)(libusb_context * ctx, struct timeval * tv, int * completed);
int (libusb_handle_events)(libusb_context * ctx);
int (libusb_handle_events_completed)(libusb_context * ctx, int * completed);
int (libusb_handle_events_locked)(libusb_context * ctx, struct timeval * tv);
int (libusb_pollfds_handle_timeouts)(libusb_context * ctx);
int (libusb_get_next_timeout)(libusb_context * ctx, struct timeval * tv);
const struct libusb_pollfd * * (libusb_get_pollfds)(libusb_context * ctx);
void (libusb_free_pollfds)(const struct libusb_pollfd * * pollfds);
void (libusb_set_pollfd_notifiers)(libusb_context * ctx, libusb_pollfd_added_cb added_cb, libusb_pollfd_removed_cb removed_cb, void * user_data);
int (libusb_hotplug_register_callback)(libusb_context * ctx, int events, int flags, int vendor_id, int product_id, int dev_class, libusb_hotplug_callback_fn cb_fn, void * user_data, libusb_hotplug_callback_handle * callback_handle);
void (libusb_hotplug_deregister_callback)(libusb_context * ctx, libusb_hotplug_callback_handle callback_handle);
void * (libusb_hotplug_get_user_data)(libusb_context * ctx, libusb_hotplug_callback_handle callback_handle);